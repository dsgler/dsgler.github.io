{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"【屏蔽广告】屏蔽谷歌广告、百度广告、知乎广告、隐藏谷歌和百度搜索增强百度搜索结果的各种广告等等（过滤所有采用谷歌联盟和百度联盟等广告联盟的广告）","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["zhihu.com","baidu.com","baiducontent.com","dadiyouhui02.cn","*"],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://*.baidu.com/*","*://*.google.com/*","*://*.bing.com/*","*://*.so.com/*","*://*.zhihu.com/*","*://*.douban.com/*","*://*.weibo.com/*","*://twitter.com/*","*://*.youtube.com/*","*://*.bilibili.com/*","*://*.csdn.net/*","*://*/*"],"orig_noframes":true,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[],"orig_run_in":[]},"run_at":null,"sandbox":"DOM","tab_types":null,"unwrap":null,"user_modified":null,"run_in":null,"tags":[]},"storage":{"ts":1731851954912,"data":{"allconfig":"o{\"baidu\": {\"baidumenu\": true,\"baidulogo\": true,\"baidulianjie\": true,\"baiduhot\": true,\"baidutbq\": true,\"baidujdq\": true,\"kgbaidued\": true,\"kgbaiduad\": true,\"kggoogleed\": true,\"kggooglead\": true,\"kg360ed\": true,\"kg360ad\": true,\"kgbinged\": true,\"kgbingad\": true,\"kgtwied\": true,\"kgtwimv\": true,\"kgtwiad\": true,\"kgyoued\": true,\"kgyoumv\": true,\"kgyouad\": true,\"kgweixined\": true,\"kgweixinad\": true,\"kgdoubaned\": true,\"kgdoubanad\": true,\"kgzhihued\": true,\"kgzhihuad\": true,\"kgbilied\": true,\"kgbiliad\": true,\"kgweiboed\": true,\"kgweiboad\": true,\"kgweibomv\": true,\"kgpingbis\": true,\"Proactivelyads\": false,\"kgpingbiiframe\": false,\"addkwssbutton\": true,\"addssbutton\": true,\"baiducss\": false,\"baidueye\": false},\"google\": {},\"so360\": {},\"pingbiurl\": [\"wenku.baidu.com\"],\"whiteurl\": [],\"pingbikw\": []}","allconfigtime":"n1661760210","hasRunkgpingbisBefore":"btrue","zkdz_name":"sbaiduga"}},"enabled":false,"position":1,"file_url":"https://update.greasyfork.org/scripts/460743/%E3%80%90%E5%B1%8F%E8%94%BD%E5%B9%BF%E5%91%8A%E3%80%91%E5%B1%8F%E8%94%BD%E8%B0%B7%E6%AD%8C%E5%B9%BF%E5%91%8A%E3%80%81%E7%99%BE%E5%BA%A6%E5%B9%BF%E5%91%8A%E3%80%81%E7%9F%A5%E4%B9%8E%E5%B9%BF%E5%91%8A%E3%80%81%E9%9A%90%E8%97%8F%E8%B0%B7%E6%AD%8C%E5%92%8C%E7%99%BE%E5%BA%A6%E6%90%9C%E7%B4%A2%E5%A2%9E%E5%BC%BA%E7%99%BE%E5%BA%A6%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C%E7%9A%84%E5%90%84%E7%A7%8D%E5%B9%BF%E5%91%8A%E7%AD%89%E7%AD%89%EF%BC%88%E8%BF%87%E6%BB%A4%E6%89%80%E6%9C%89%E9%87%87%E7%94%A8%E8%B0%B7%E6%AD%8C%E8%81%94%E7%9B%9F%E5%92%8C%E7%99%BE%E5%BA%A6%E8%81%94%E7%9B%9F%E7%AD%89%E5%B9%BF%E5%91%8A%E8%81%94%E7%9B%9F%E7%9A%84%E5%B9%BF%E5%91%8A%EF%BC%89.user.js","uuid":"41dc5dfe-39dc-46cf-9d35-9b3aed3a16d0","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-d/jquery/2.1.4/jquery.min.js","ts":1720102345089,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"sweetalert.min.js","url":"https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-d/sweetalert/2.1.2/sweetalert.min.js","ts":1720102345079,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"jquery.qrcode.min.js","url":"https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-d/jquery.qrcode/1.0/jquery.qrcode.min.js","ts":1720102345080,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"html2canvas.js","url":"https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-d/html2canvas/0.5.0-beta4/html2canvas.js","ts":1720102345550,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"echarts.min.js","url":"https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-d/echarts/5.0.1/echarts.min.js","ts":1720102345679,"mimetype":"text/javascript"},"source":""}]},{"name":"「CSDNGreener」🍃CSDN广告完全过滤|免登录|个性化排版|最强老牌脚本|持续更新","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["www.csdn.net"],"orig_excludes":[],"orig_includes":["*://*.csdn.net/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[],"orig_run_in":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":null,"run_in":null,"tags":[]},"storage":{"ts":1719143958149,"data":{}},"enabled":true,"position":2,"file_url":"https://update.greasyfork.org/scripts/378351/%E3%80%8CCSDNGreener%E3%80%8D%F0%9F%8D%83CSDN%E5%B9%BF%E5%91%8A%E5%AE%8C%E5%85%A8%E8%BF%87%E6%BB%A4%7C%E5%85%8D%E7%99%BB%E5%BD%95%7C%E4%B8%AA%E6%80%A7%E5%8C%96%E6%8E%92%E7%89%88%7C%E6%9C%80%E5%BC%BA%E8%80%81%E7%89%8C%E8%84%9A%E6%9C%AC%7C%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.user.js","uuid":"7f12542d-59ca-479b-b427-b0222e4ff6d9","source":"","requires":[{"meta":{"name":"jquery.cookie.min.js","url":"https://lf26-cdn-tos.bytecdntp.com/cdn/expire-1-M/jquery-cookie/1.4.1/jquery.cookie.min.js","ts":1721545090000,"mimetype":"text/javascript"},"source":"LyohIGpxdWVyeS5jb29raWUgdjEuNC4xIHwgTUlUICovCiFmdW5jdGlvbihhKXsiZnVuY3Rpb24iPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShbImpxdWVyeSJdLGEpOiJvYmplY3QiPT10eXBlb2YgZXhwb3J0cz9hKHJlcXVpcmUoImpxdWVyeSIpKTphKGpRdWVyeSl9KGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoYSl7cmV0dXJuIGgucmF3P2E6ZW5jb2RlVVJJQ29tcG9uZW50KGEpfWZ1bmN0aW9uIGMoYSl7cmV0dXJuIGgucmF3P2E6ZGVjb2RlVVJJQ29tcG9uZW50KGEpfWZ1bmN0aW9uIGQoYSl7cmV0dXJuIGIoaC5qc29uP0pTT04uc3RyaW5naWZ5KGEpOlN0cmluZyhhKSl9ZnVuY3Rpb24gZShhKXswPT09YS5pbmRleE9mKCciJykmJihhPWEuc2xpY2UoMSwtMSkucmVwbGFjZSgvXFwiL2csJyInKS5yZXBsYWNlKC9cXFxcL2csIlxcIikpO3RyeXtyZXR1cm4gYT1kZWNvZGVVUklDb21wb25lbnQoYS5yZXBsYWNlKGcsIiAiKSksaC5qc29uP0pTT04ucGFyc2UoYSk6YX1jYXRjaChiKXt9fWZ1bmN0aW9uIGYoYixjKXt2YXIgZD1oLnJhdz9iOmUoYik7cmV0dXJuIGEuaXNGdW5jdGlvbihjKT9jKGQpOmR9dmFyIGc9L1wrL2csaD1hLmNvb2tpZT1mdW5jdGlvbihlLGcsaSl7aWYodm9pZCAwIT09ZyYmIWEuaXNGdW5jdGlvbihnKSl7aWYoaT1hLmV4dGVuZCh7fSxoLmRlZmF1bHRzLGkpLCJudW1iZXIiPT10eXBlb2YgaS5leHBpcmVzKXt2YXIgaj1pLmV4cGlyZXMsaz1pLmV4cGlyZXM9bmV3IERhdGU7ay5zZXRUaW1lKCtrKzg2NGU1KmopfXJldHVybiBkb2N1bWVudC5jb29raWU9W2IoZSksIj0iLGQoZyksaS5leHBpcmVzPyI7IGV4cGlyZXM9IitpLmV4cGlyZXMudG9VVENTdHJpbmcoKToiIixpLnBhdGg/IjsgcGF0aD0iK2kucGF0aDoiIixpLmRvbWFpbj8iOyBkb21haW49IitpLmRvbWFpbjoiIixpLnNlY3VyZT8iOyBzZWN1cmUiOiIiXS5qb2luKCIiKX1mb3IodmFyIGw9ZT92b2lkIDA6e30sbT1kb2N1bWVudC5jb29raWU/ZG9jdW1lbnQuY29va2llLnNwbGl0KCI7ICIpOltdLG49MCxvPW0ubGVuZ3RoO28+bjtuKyspe3ZhciBwPW1bbl0uc3BsaXQoIj0iKSxxPWMocC5zaGlmdCgpKSxyPXAuam9pbigiPSIpO2lmKGUmJmU9PT1xKXtsPWYocixnKTticmVha31lfHx2b2lkIDA9PT0ocj1mKHIpKXx8KGxbcV09cil9cmV0dXJuIGx9O2guZGVmYXVsdHM9e30sYS5yZW1vdmVDb29raWU9ZnVuY3Rpb24oYixjKXtyZXR1cm4gdm9pZCAwPT09YS5jb29raWUoYik/ITE6KGEuY29va2llKGIsIiIsYS5leHRlbmQoe30sYyx7ZXhwaXJlczotMX0pKSwhYS5jb29raWUoYikpfX0pOw=="},{"meta":{"name":"nprogress.min.js","url":"https://lf26-cdn-tos.bytecdntp.com/cdn/expire-1-M/nprogress/0.2.0/nprogress.min.js","ts":1721545090000,"mimetype":"text/javascript"},"source":"IWZ1bmN0aW9uKG4sZSl7ImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoZSk6Im9iamVjdCI9PXR5cGVvZiBleHBvcnRzP21vZHVsZS5leHBvcnRzPWUoKTpuLk5Qcm9ncmVzcz1lKCl9KHRoaXMsZnVuY3Rpb24oKXtmdW5jdGlvbiBuKG4sZSx0KXtyZXR1cm4gZT5uP2U6bj50P3Q6bn1mdW5jdGlvbiBlKG4pe3JldHVybiAxMDAqKC0xK24pfWZ1bmN0aW9uIHQobix0LHIpe3ZhciBpO3JldHVybiBpPSJ0cmFuc2xhdGUzZCI9PT1jLnBvc2l0aW9uVXNpbmc/e3RyYW5zZm9ybToidHJhbnNsYXRlM2QoIitlKG4pKyIlLDAsMCkifToidHJhbnNsYXRlIj09PWMucG9zaXRpb25Vc2luZz97dHJhbnNmb3JtOiJ0cmFuc2xhdGUoIitlKG4pKyIlLDApIn06eyJtYXJnaW4tbGVmdCI6ZShuKSsiJSJ9LGkudHJhbnNpdGlvbj0iYWxsICIrdCsibXMgIityLGl9ZnVuY3Rpb24gcihuLGUpe3ZhciB0PSJzdHJpbmciPT10eXBlb2Ygbj9uOm8obik7cmV0dXJuIHQuaW5kZXhPZigiICIrZSsiICIpPj0wfWZ1bmN0aW9uIGkobixlKXt2YXIgdD1vKG4pLGk9dCtlO3IodCxlKXx8KG4uY2xhc3NOYW1lPWkuc3Vic3RyaW5nKDEpKX1mdW5jdGlvbiBzKG4sZSl7dmFyIHQsaT1vKG4pO3IobixlKSYmKHQ9aS5yZXBsYWNlKCIgIitlKyIgIiwiICIpLG4uY2xhc3NOYW1lPXQuc3Vic3RyaW5nKDEsdC5sZW5ndGgtMSkpfWZ1bmN0aW9uIG8obil7cmV0dXJuKCIgIisobi5jbGFzc05hbWV8fCIiKSsiICIpLnJlcGxhY2UoL1xzKy9naSwiICIpfWZ1bmN0aW9uIGEobil7biYmbi5wYXJlbnROb2RlJiZuLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobil9dmFyIHU9e307dS52ZXJzaW9uPSIwLjIuMCI7dmFyIGM9dS5zZXR0aW5ncz17bWluaW11bTouMDgsZWFzaW5nOiJlYXNlIixwb3NpdGlvblVzaW5nOiIiLHNwZWVkOjIwMCx0cmlja2xlOiEwLHRyaWNrbGVSYXRlOi4wMix0cmlja2xlU3BlZWQ6ODAwLHNob3dTcGlubmVyOiEwLGJhclNlbGVjdG9yOidbcm9sZT0iYmFyIl0nLHNwaW5uZXJTZWxlY3RvcjonW3JvbGU9InNwaW5uZXIiXScscGFyZW50OiJib2R5Iix0ZW1wbGF0ZTonPGRpdiBjbGFzcz0iYmFyIiByb2xlPSJiYXIiPjxkaXYgY2xhc3M9InBlZyI+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0ic3Bpbm5lciIgcm9sZT0ic3Bpbm5lciI+PGRpdiBjbGFzcz0ic3Bpbm5lci1pY29uIj48L2Rpdj48L2Rpdj4nfTt1LmNvbmZpZ3VyZT1mdW5jdGlvbihuKXt2YXIgZSx0O2ZvcihlIGluIG4pdD1uW2VdLHZvaWQgMCE9PXQmJm4uaGFzT3duUHJvcGVydHkoZSkmJihjW2VdPXQpO3JldHVybiB0aGlzfSx1LnN0YXR1cz1udWxsLHUuc2V0PWZ1bmN0aW9uKGUpe3ZhciByPXUuaXNTdGFydGVkKCk7ZT1uKGUsYy5taW5pbXVtLDEpLHUuc3RhdHVzPTE9PT1lP251bGw6ZTt2YXIgaT11LnJlbmRlcighcikscz1pLnF1ZXJ5U2VsZWN0b3IoYy5iYXJTZWxlY3Rvciksbz1jLnNwZWVkLGE9Yy5lYXNpbmc7cmV0dXJuIGkub2Zmc2V0V2lkdGgsbChmdW5jdGlvbihuKXsiIj09PWMucG9zaXRpb25Vc2luZyYmKGMucG9zaXRpb25Vc2luZz11LmdldFBvc2l0aW9uaW5nQ1NTKCkpLGYocyx0KGUsbyxhKSksMT09PWU/KGYoaSx7dHJhbnNpdGlvbjoibm9uZSIsb3BhY2l0eToxfSksaS5vZmZzZXRXaWR0aCxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZihpLHt0cmFuc2l0aW9uOiJhbGwgIitvKyJtcyBsaW5lYXIiLG9wYWNpdHk6MH0pLHNldFRpbWVvdXQoZnVuY3Rpb24oKXt1LnJlbW92ZSgpLG4oKX0sbyl9LG8pKTpzZXRUaW1lb3V0KG4sbyl9KSx0aGlzfSx1LmlzU3RhcnRlZD1mdW5jdGlvbigpe3JldHVybiJudW1iZXIiPT10eXBlb2YgdS5zdGF0dXN9LHUuc3RhcnQ9ZnVuY3Rpb24oKXt1LnN0YXR1c3x8dS5zZXQoMCk7dmFyIG49ZnVuY3Rpb24oKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dS5zdGF0dXMmJih1LnRyaWNrbGUoKSxuKCkpfSxjLnRyaWNrbGVTcGVlZCl9O3JldHVybiBjLnRyaWNrbGUmJm4oKSx0aGlzfSx1LmRvbmU9ZnVuY3Rpb24obil7cmV0dXJuIG58fHUuc3RhdHVzP3UuaW5jKC4zKy41Kk1hdGgucmFuZG9tKCkpLnNldCgxKTp0aGlzfSx1LmluYz1mdW5jdGlvbihlKXt2YXIgdD11LnN0YXR1cztyZXR1cm4gdD8oIm51bWJlciIhPXR5cGVvZiBlJiYoZT0oMS10KSpuKE1hdGgucmFuZG9tKCkqdCwuMSwuOTUpKSx0PW4odCtlLDAsLjk5NCksdS5zZXQodCkpOnUuc3RhcnQoKX0sdS50cmlja2xlPWZ1bmN0aW9uKCl7cmV0dXJuIHUuaW5jKE1hdGgucmFuZG9tKCkqYy50cmlja2xlUmF0ZSl9LGZ1bmN0aW9uKCl7dmFyIG49MCxlPTA7dS5wcm9taXNlPWZ1bmN0aW9uKHQpe3JldHVybiB0JiYicmVzb2x2ZWQiIT09dC5zdGF0ZSgpPygwPT09ZSYmdS5zdGFydCgpLG4rKyxlKyssdC5hbHdheXMoZnVuY3Rpb24oKXtlLS0sMD09PWU/KG49MCx1LmRvbmUoKSk6dS5zZXQoKG4tZSkvbil9KSx0aGlzKTp0aGlzfX0oKSx1LnJlbmRlcj1mdW5jdGlvbihuKXtpZih1LmlzUmVuZGVyZWQoKSlyZXR1cm4gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm5wcm9ncmVzcyIpO2koZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCJucHJvZ3Jlc3MtYnVzeSIpO3ZhciB0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO3QuaWQ9Im5wcm9ncmVzcyIsdC5pbm5lckhUTUw9Yy50ZW1wbGF0ZTt2YXIgcixzPXQucXVlcnlTZWxlY3RvcihjLmJhclNlbGVjdG9yKSxvPW4/Ii0xMDAiOmUodS5zdGF0dXN8fDApLGw9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihjLnBhcmVudCk7cmV0dXJuIGYocyx7dHJhbnNpdGlvbjoiYWxsIDAgbGluZWFyIix0cmFuc2Zvcm06InRyYW5zbGF0ZTNkKCIrbysiJSwwLDApIn0pLGMuc2hvd1NwaW5uZXJ8fChyPXQucXVlcnlTZWxlY3RvcihjLnNwaW5uZXJTZWxlY3RvciksciYmYShyKSksbCE9ZG9jdW1lbnQuYm9keSYmaShsLCJucHJvZ3Jlc3MtY3VzdG9tLXBhcmVudCIpLGwuYXBwZW5kQ2hpbGQodCksdH0sdS5yZW1vdmU9ZnVuY3Rpb24oKXtzKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCwibnByb2dyZXNzLWJ1c3kiKSxzKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYy5wYXJlbnQpLCJucHJvZ3Jlc3MtY3VzdG9tLXBhcmVudCIpO3ZhciBuPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJucHJvZ3Jlc3MiKTtuJiZhKG4pfSx1LmlzUmVuZGVyZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hIWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJucHJvZ3Jlc3MiKX0sdS5nZXRQb3NpdGlvbmluZ0NTUz1mdW5jdGlvbigpe3ZhciBuPWRvY3VtZW50LmJvZHkuc3R5bGUsZT0iV2Via2l0VHJhbnNmb3JtImluIG4/IldlYmtpdCI6Ik1velRyYW5zZm9ybSJpbiBuPyJNb3oiOiJtc1RyYW5zZm9ybSJpbiBuPyJtcyI6Ik9UcmFuc2Zvcm0iaW4gbj8iTyI6IiI7cmV0dXJuIGUrIlBlcnNwZWN0aXZlImluIG4/InRyYW5zbGF0ZTNkIjplKyJUcmFuc2Zvcm0iaW4gbj8idHJhbnNsYXRlIjoibWFyZ2luIn07dmFyIGw9ZnVuY3Rpb24oKXtmdW5jdGlvbiBuKCl7dmFyIHQ9ZS5zaGlmdCgpO3QmJnQobil9dmFyIGU9W107cmV0dXJuIGZ1bmN0aW9uKHQpe2UucHVzaCh0KSwxPT1lLmxlbmd0aCYmbigpfX0oKSxmPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gbihuKXtyZXR1cm4gbi5yZXBsYWNlKC9eLW1zLS8sIm1zLSIpLnJlcGxhY2UoLy0oW1xkYS16XSkvZ2ksZnVuY3Rpb24obixlKXtyZXR1cm4gZS50b1VwcGVyQ2FzZSgpfSl9ZnVuY3Rpb24gZShuKXt2YXIgZT1kb2N1bWVudC5ib2R5LnN0eWxlO2lmKG4gaW4gZSlyZXR1cm4gbjtmb3IodmFyIHQscj1pLmxlbmd0aCxzPW4uY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrbi5zbGljZSgxKTtyLS07KWlmKHQ9aVtyXStzLHQgaW4gZSlyZXR1cm4gdDtyZXR1cm4gbn1mdW5jdGlvbiB0KHQpe3JldHVybiB0PW4odCksc1t0XXx8KHNbdF09ZSh0KSl9ZnVuY3Rpb24gcihuLGUscil7ZT10KGUpLG4uc3R5bGVbZV09cn12YXIgaT1bIldlYmtpdCIsIk8iLCJNb3oiLCJtcyJdLHM9e307cmV0dXJuIGZ1bmN0aW9uKG4sZSl7dmFyIHQsaSxzPWFyZ3VtZW50cztpZigyPT1zLmxlbmd0aClmb3IodCBpbiBlKWk9ZVt0XSx2b2lkIDAhPT1pJiZlLmhhc093blByb3BlcnR5KHQpJiZyKG4sdCxpKTtlbHNlIHIobixzWzFdLHNbMl0pfX0oKTtyZXR1cm4gdX0pOw=="},{"meta":{"name":"clipboard.min.js","url":"https://lf26-cdn-tos.bytecdntp.com/cdn/expire-1-M/clipboard.js/2.0.10/clipboard.min.js","ts":1721545089999,"mimetype":"text/javascript"},"source":""}]},{"name":"音视频增强脚本：无极调速|倍速快学|快乐刷剧|视频下载|画面截图等「适用大部分网站」","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":["*://yiyan.baidu.com/*","*://*.bing.com/search*"],"orig_includes":[],"orig_matches":["*://*/*"],"orig_noframes":null,"orig_run_at":"document-start","orig_run_in":[],"orig_tags":[],"use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"run_in":null,"sandbox":null,"tags":[],"unwrap":null,"user_modified":null},"storage":{"ts":1743490215536,"data":{"__monkeyMsgBroadcast__":"o{\"data\": {},\"tabId\": 16957,\"title\": \"如何将谷歌浏览器的书签导出？_chrome书签导出-CSDN博客\",\"referrer\": {\"ancestorOrigins\": {\"length\": 0},\"href\": \"https://blog.csdn.net/qq_45325810/article/details/122360011\",\"origin\": \"https://blog.csdn.net\",\"protocol\": \"https:\",\"host\": \"blog.csdn.net\",\"hostname\": \"blog.csdn.net\",\"port\": \"\",\"pathname\": \"/qq_45325810/article/details/122360011\",\"search\": \"\",\"hash\": \"\"},\"updateTime\": 1743490101385}","_global_id_":"n16958","_h5player_blacklist_domains":"o[\"www.canva.cn\"]","_h5player_blacklist_urls":"o[\"https://www.bilibili.com/\"]","_h5player_enhance_unfoldMenu":"btrue","_h5player_hotkeys":"o[{\"desc\": \"网页全屏\",\"key\": \"shift+enter\",\"command\": \"setWebFullScreen\",\"disabled\": false},{\"desc\": \"全屏\",\"key\": \"enter\",\"command\": \"setFullScreen\",\"disabled\": false},{\"desc\": \"切换画中画模式\",\"key\": \"shift+p\",\"command\": \"togglePictureInPicture\",\"disabled\": false},{\"desc\": \"视频截图\",\"key\": \"shift+s\",\"command\": \"capture\",\"disabled\": false},{\"desc\": \"启用或禁止自动恢复播放进度功能\",\"key\": \"shift+r\",\"command\": \"switchRestorePlayProgressStatus\",\"disabled\": false},{\"desc\": \"垂直镜像翻转\",\"key\": \"shift+m\",\"command\": \"setMirror\",\"args\": [true],\"disabled\": false},{\"desc\": \"水平镜像翻转\",\"key\": \"m\",\"command\": \"setMirror\",\"disabled\": false},{\"desc\": \"下载音视频文件（实验性功能）\",\"key\": \"shift+d\",\"command\": \"mediaDownload\",\"disabled\": false},{\"desc\": \"缩小视频画面 -0.05\",\"key\": \"shift+x\",\"command\": \"setScaleDown\",\"disabled\": false},{\"desc\": \"放大视频画面 +0.05\",\"key\": \"shift+c\",\"command\": \"setScaleUp\",\"disabled\": false},{\"desc\": \"恢复视频画面\",\"key\": \"shift+z\",\"command\": \"resetTransform\",\"disabled\": false},{\"desc\": \"画面向右移动10px\",\"key\": \"shift+arrowright\",\"command\": \"setTranslateRight\",\"disabled\": false},{\"desc\": \"画面向左移动10px\",\"key\": \"shift+arrowleft\",\"command\": \"setTranslateLeft\",\"disabled\": false},{\"desc\": \"画面向上移动10px\",\"key\": \"shift+arrowup\",\"command\": \"setTranslateUp\",\"disabled\": false},{\"desc\": \"画面向下移动10px\",\"key\": \"shift+arrowdown\",\"command\": \"setTranslateDown\",\"disabled\": false},{\"desc\": \"前进5秒\",\"key\": \"arrowright\",\"command\": \"setCurrentTimeUp\",\"disabled\": false},{\"desc\": \"后退5秒\",\"key\": \"arrowleft\",\"command\": \"setCurrentTimeDown\",\"disabled\": false},{\"desc\": \"前进30秒\",\"key\": \"/\",\"command\": \"setCurrentTimeUp\",\"args\": [30],\"disabled\": false},{\"desc\": \"后退30秒\",\"key\": \".\",\"command\": \"setCurrentTimeDown\",\"args\": [-30],\"disabled\": false},{\"desc\": \"音量升高 5%\",\"key\": \"arrowup\",\"command\": \"setVolumeUp\",\"args\": [0.05],\"disabled\": false},{\"desc\": \"音量降低 5%\",\"key\": \"arrowdown\",\"command\": \"setVolumeDown\",\"args\": [-0.05],\"disabled\": false},{\"desc\": \"音量升高 20%\",\"key\": \"ctrl+arrowup\",\"command\": \"setVolumeUp\",\"args\": [0.2],\"disabled\": false},{\"desc\": \"音量降低 20%\",\"key\": \"ctrl+arrowdown\",\"command\": \"setVolumeDown\",\"args\": [-0.2],\"disabled\": false},{\"desc\": \"切换暂停/播放\",\"key\": \"space\",\"command\": \"switchPlayStatus\",\"disabled\": false},{\"desc\": \"减速播放 -0.1\",\"key\": \"x\",\"command\": \"setPlaybackRateDown\",\"disabled\": false},{\"desc\": \"加速播放 +0.1\",\"key\": \"c\",\"command\": \"setPlaybackRateUp\",\"disabled\": false},{\"desc\": \"正常速度播放\",\"key\": \"z\",\"command\": \"resetPlaybackRate\",\"disabled\": false},{\"desc\": \"设置1x的播放速度\",\"key\": \"Digit1\",\"command\": \"setPlaybackRatePlus\",\"args\": 1,\"disabled\": false},{\"desc\": \"设置1x的播放速度\",\"key\": \"Numpad1\",\"command\": \"setPlaybackRatePlus\",\"args\": 1,\"disabled\": false},{\"desc\": \"设置2x的播放速度\",\"key\": \"Digit2\",\"command\": \"setPlaybackRatePlus\",\"args\": 2,\"disabled\": false},{\"desc\": \"设置2x的播放速度\",\"key\": \"Numpad2\",\"command\": \"setPlaybackRatePlus\",\"args\": 2,\"disabled\": false},{\"desc\": \"设置3x的播放速度\",\"key\": \"Digit3\",\"command\": \"setPlaybackRatePlus\",\"args\": 3,\"disabled\": false},{\"desc\": \"设置3x的播放速度\",\"key\": \"Numpad3\",\"command\": \"setPlaybackRatePlus\",\"args\": 3,\"disabled\": false},{\"desc\": \"设置4x的播放速度\",\"key\": \"Digit4\",\"command\": \"setPlaybackRatePlus\",\"args\": 4,\"disabled\": false},{\"desc\": \"设置4x的播放速度\",\"key\": \"Numpad4\",\"command\": \"setPlaybackRatePlus\",\"args\": 4,\"disabled\": false},{\"desc\": \"下一帧\",\"key\": \"F\",\"command\": \"freezeFrame\",\"args\": 1,\"disabled\": false},{\"desc\": \"上一帧\",\"key\": \"D\",\"command\": \"freezeFrame\",\"args\": -1,\"disabled\": false},{\"desc\": \"增加亮度\",\"key\": \"E\",\"command\": \"setBrightnessUp\",\"disabled\": false},{\"desc\": \"减少亮度\",\"key\": \"W\",\"command\": \"setBrightnessDown\",\"disabled\": false},{\"desc\": \"增加对比度\",\"key\": \"T\",\"command\": \"setContrastUp\",\"disabled\": false},{\"desc\": \"减少对比度\",\"key\": \"R\",\"command\": \"setContrastDown\",\"disabled\": false},{\"desc\": \"增加饱和度\",\"key\": \"U\",\"command\": \"setSaturationUp\",\"disabled\": false},{\"desc\": \"减少饱和度\",\"key\": \"Y\",\"command\": \"setSaturationDown\",\"disabled\": false},{\"desc\": \"增加色相\",\"key\": \"O\",\"command\": \"setHueUp\",\"disabled\": false},{\"desc\": \"减少色相\",\"key\": \"I\",\"command\": \"setHueDown\",\"disabled\": false},{\"desc\": \"模糊增加 1 px\",\"key\": \"K\",\"command\": \"setBlurUp\",\"disabled\": false},{\"desc\": \"模糊减少 1 px\",\"key\": \"J\",\"command\": \"setBlurDown\",\"disabled\": false},{\"desc\": \"图像复位\",\"key\": \"P\",\"command\": \"resetFilterAndTransform\",\"disabled\": false},{\"desc\": \"画面旋转 90 度\",\"key\": \"S\",\"command\": \"setRotate\",\"disabled\": false},{\"desc\": \"播放下一集\",\"key\": \"N\",\"command\": \"setNextVideo\",\"disabled\": false},{\"desc\": \"插入debugger断点\",\"key\": \"ctrl+shift+alt+d\",\"command\": \"debuggerNow\",\"disabled\": false},{\"desc\": \"执行JS脚本\",\"key\": \"ctrl+j ctrl+s\",\"when\": \"\",\"disabled\": false}]","_h5player_media_playbackRate":"n1","_h5player_media_volume":"s0.05","_h5player_ui_enable":"bfalse","globalKeydownEvent":"o{\"data\": {\"isTrusted\": true,\"key\": \"Control\",\"code\": \"ControlLeft\",\"location\": 1,\"ctrlKey\": true,\"shiftKey\": false,\"altKey\": false,\"metaKey\": false,\"repeat\": false,\"isComposing\": false,\"charCode\": 0,\"keyCode\": 17,\"DOM_KEY_LOCATION_STANDARD\": 0,\"DOM_KEY_LOCATION_LEFT\": 1,\"DOM_KEY_LOCATION_RIGHT\": 2,\"DOM_KEY_LOCATION_NUMPAD\": 3,\"detail\": 0,\"which\": 17,\"type\": \"keydown\",\"eventPhase\": 1,\"bubbles\": true,\"cancelable\": true,\"defaultPrevented\": false,\"composed\": true,\"timeStamp\": 127785.6000000001,\"returnValue\": true,\"cancelBubble\": false,\"NONE\": 0,\"CAPTURING_PHASE\": 1,\"AT_TARGET\": 2,\"BUBBLING_PHASE\": 3},\"tabId\": 16957,\"title\": \"如何将谷歌浏览器的书签导出？_chrome书签导出-CSDN博客\",\"referrer\": {\"ancestorOrigins\": {\"length\": 0},\"href\": \"https://blog.csdn.net/qq_45325810/article/details/122360011\",\"origin\": \"https://blog.csdn.net\",\"protocol\": \"https:\",\"host\": \"blog.csdn.net\",\"hostname\": \"blog.csdn.net\",\"port\": \"\",\"pathname\": \"/qq_45325810/article/details/122360011\",\"search\": \"\",\"hash\": \"\"},\"updateTime\": 1743490103380}","globalPictureInPictureInfo":"o{\"data\": {\"usePictureInPicture\": false},\"tabId\": 695,\"title\": \"【东方Project】第11回东方中文人气投票 音乐部门 TOP100 速报版_哔哩哔哩_bilibili\",\"referrer\": {\"ancestorOrigins\": {\"length\": 0},\"href\": \"https://www.bilibili.com/video/BV1MW4y1c7m5/?spm_id_from=333.1365.list.card_archive.click&vd_source=8bdbe890092d08a3408e6e05fb13ad43\",\"origin\": \"https://www.bilibili.com\",\"protocol\": \"https:\",\"host\": \"www.bilibili.com\",\"hostname\": \"www.bilibili.com\",\"port\": \"\",\"pathname\": \"/video/BV1MW4y1c7m5/\",\"search\": \"?spm_id_from=333.1365.list.card_archive.click&vd_source=8bdbe890092d08a3408e6e05fb13ad43\",\"hash\": \"\"},\"updateTime\": 1706365698709}","videoDetected":"o{\"data\": {\"src\": \"\"},\"tabId\": 16943,\"title\": \"External Player - 哔哩哔哩嵌入式外链播放器\",\"referrer\": {\"ancestorOrigins\": {\"0\": \"https://www.bing.com\",\"length\": 1},\"href\": \"https://player.bilibili.com/player.html?aid=392251064&bvid=BV16d4y177B8&cid=950848476&page=1&autoplay=1&mute=0\",\"origin\": \"https://player.bilibili.com\",\"protocol\": \"https:\",\"host\": \"player.bilibili.com\",\"hostname\": \"player.bilibili.com\",\"port\": \"\",\"pathname\": \"/player.html\",\"search\": \"?aid=392251064&bvid=BV16d4y177B8&cid=950848476&page=1&autoplay=1&mute=0\",\"hash\": \"\"},\"updateTime\": 1743483928250}"}},"enabled":true,"position":3,"file_url":"https://update.greasyfork.org/scripts/381682/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%A2%9E%E5%BC%BA%E8%84%9A%E6%9C%AC%EF%BC%9A%E6%97%A0%E6%9E%81%E8%B0%83%E9%80%9F%7C%E5%80%8D%E9%80%9F%E5%BF%AB%E5%AD%A6%7C%E5%BF%AB%E4%B9%90%E5%88%B7%E5%89%A7%7C%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%7C%E7%94%BB%E9%9D%A2%E6%88%AA%E5%9B%BE%E7%AD%89%E3%80%8C%E9%80%82%E7%94%A8%E5%A4%A7%E9%83%A8%E5%88%86%E7%BD%91%E7%AB%99%E3%80%8D.user.js","uuid":"5c63ebc6-5a08-4887-b03e-51919d4ff5fe","source":""},{"name":"guokebohe","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://www.ghxi.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[],"orig_run_in":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":null,"run_in":null,"tags":[]},"storage":{"ts":1719143958150,"data":{}},"enabled":true,"position":4,"uuid":"bcbe9bd3-f822-4632-b919-5391474b5bf8","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBndW9rZWJvaGUKLy8gQG5hbWVzcGFjZSAgICBodHRwOi8vdGFtcGVybW9ua2V5Lm5ldC8KLy8gQHZlcnNpb24gICAgICAyMDI0LTAzLTIyCi8vIEBkZXNjcmlwdGlvbiAgdHJ5IHRvIHRha2Ugb3ZlciB0aGUgd29ybGQhCi8vIEBhdXRob3IgICAgICAgWW91Ci8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly93d3cuZ2h4aS5jb20vKgovLyBAaWNvbiAgICAgICAgIGh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vczIvZmF2aWNvbnM/c3o9NjQmZG9tYWluPWdoeGkuY29tCi8vIEBncmFudCAgICAgICAgbm9uZQovLyA9PS9Vc2VyU2NyaXB0PT0KCihmdW5jdGlvbigpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHNldFRpbWVvdXQoKCk9PntqUXVlcnkoJ2E6Y29udGFpbnMoIuWFs+mXreaPkOekuiIpJykuY2xpY2soKX0sMzAwMCkKICAgIC8valF1ZXJ5KCdhOmNvbnRhaW5zKCLlhbPpl63mj5DnpLoiKScpLmNsaWNrKCkKICAgIGNvbnNvbGUubG9nKCc2NjYnKQogICAgLy8gWW91ciBjb2RlIGhlcmUuLi4KfSkoKTs="},{"name":"Steam 创意工坊 MOD 下载","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["steamcommunity.com","ggntw.com"],"orig_excludes":[],"orig_includes":[],"orig_matches":["steamcommunity.com/workshop/browse/?appid=*","steamcommunity.com/workshop/filedetails/?id=*","steamcommunity.com/sharedfiles/filedetails/?id=*","steamcommunity.com/profiles/*/myworkshopfiles/?appid=*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[],"orig_run_in":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":null,"run_in":null,"tags":[]},"storage":{"ts":1719143958150,"data":{}},"enabled":false,"position":5,"file_url":"https://fs.finesoft.org/Steam%20%E5%88%9B%E6%84%8F%E5%B7%A5%E5%9D%8A%20MOD%20%E4%B8%8B%E8%BD%BD-2024-05-12.user.js","uuid":"e60f6d07-5650-4437-a2e2-81cfaabe4620","source":""},{"name":"BiliBili-EasyCopy","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["http*://bilibili.com","http*://bilibili.com/*","http*://www.bilibili.com","http*://www.bilibili.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[],"orig_run_in":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":null,"run_in":null,"tags":[]},"storage":{"ts":1724931221934,"data":{}},"enabled":true,"position":6,"file_url":"https://update.greasyfork.org/scripts/464155/BiliBili-EasyCopy.user.js","uuid":"26acbb33-d55f-48d7-b030-ddef84bce591","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgICAgICAgQmlsaUJpbGktRWFzeUNvcHkKLy8gQG5hbWU6emgtQ04gICAgICAgICAgQmlsaUJpbGkt5Y675paH5pys5aSN5Yi25rC05Y2wCi8vIEBuYW1lc3BhY2UgICAgICAgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9UaXRhblJHQgovLyBAdmVyc2lvbiAgICAgICAgICAgICAxLjEKLy8gQGRlc2NyaXB0aW9uICAgICAgICAg5Y675o6JQuermeS4k+agj+S4reWkjeWItuaWh+acrOaXtueahOawtOWNsOOAggovLyBAZGVzY3JpcHRpb246emgtQ04gICDljrvmjolC56uZ5LiT5qCP5Lit5aSN5Yi25paH5pys5pe255qE5rC05Y2w44CCCi8vIEBhdXRob3IgICAgICAgICAgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9NZWh2ZXIKLy8gQGF1dGhvciAgICAgICAgICAgICAgaHR0cHM6Ly9naXRodWIuY29tL1NoZW5Ib25nRmVpCi8vIEBpY29uICAgICAgICAgICAgICAgIGRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQ0FBQUFBZ0NBWUFBQUJ6ZW5yMEFBQUFBWE5TUjBJQjJja3Nmd0FBQUFsd1NGbHpBQUF1SXdBQUxpTUJlS1UvZGdBQUJOdEpSRUZVZUp6dGxubE1WRmNVeGhHN1VidkZwa2xUcFV1Nk44V2hqYVZOU0dNVDI5VGExS1hWZEVrWG0ycEx6V2dwaUtGQ0JCdmJFQTNHVktVYnNsa0dsRkZzTFZpTDJBSEJzS1lpZ2lLRktUQUwyMVJuWVFabE9mM080ejE1UE44YkJ2cHZYL0pMaG5mUFBkOTM3em4zUG9LQy9uODBIb3JOWkc0Rmo0QndvSE1uNU4yYmRzUVNNdDJjK25wNkJod0ZicEFOWnFrSnMyZ01hQUtqZ0pqK0pDUHRMcklTSm8yQWl2aEszK0lwaWk4QzNZQms3RkNLNjBBNmNFbkNqR1hyejVUMnE0WFcxNDBLRXhNckJxaHh4M0VMeHRhQTRFbUVnOEVDY0ZvaHpwams0dk9CUmI3cW9iZ2NxdGxkVGtsbGJtSEM1elhEdEt2WVJyWXZDeVZ6ZzBBUFptaUl6d0N2QTV1SytCV3dSaEtmQlJya3EzWW01cFBSMER3Y1d6M0VrLzlLcVBEMlZlMDVPZXFMenlWNUhQQzFwUlN0MEREd0FyQ29pRjhHbThCTXljQzdVc0xSRFZuVW5sTEU5Vzc1ckhia0l3UTlDa0lMZjJxY2g3R2RpSEZLc1NPSXJmdkdSSWtuUGIwY3B4Qi9DRFNvaVB2QStxdmlvb0VzVHVqWlpLQ3k3NnM0WVJzQ3dvR3lSMExBVzhERHNRVjV6VUpaeE1TbDRBWlIvRWF4eTVYaXZKc2J1RFRLeEdVZFh4K2gxR085RkYwckpOeWxGSmZGQnFFOEh5TjJVSkY4RkVTSjRrdUFSekh1QUcrQTY2NUorbnRHZlZYOEtaOFFpRzJucEhKM2xLcjYrUFp5WjhlSVIxSXUwZ2xlQStXSzkwUGdDNTZubGJDS0E1UExYRlN5dDQ1Y0NmbmJ0VHBiTnVkNllGRFpaclBZWlBKM2ZQbmM0UytaQ1YxT0xkdC9vK0c0Ykc2d3N5RFVud0Z4WHJpNE9xVUpPVnlxWlg0VEdmYTNmSXRyVm5tOCtvYzI1bVJtSFd6YmlRUmZnVmVrSmxPWVVHczJPY1hjRjM0TlFHeUJRcHpMUUJtSDJtbWRlUHVKVFZZQlBwQjNNWDQvSm81cHJmN2x5WFpTTXJGSEVyK3c3U2h0TVRuOXJhb0FYUDBvTFMvMW1GYWR1cUlXVjZmTHR6ODlPNjMxOFVBTUJJL0VaU2NmeTZpM3hOUU0rUk9YeUpUbXprMDNid2IwZnVWRUV5dE9EQnlBK0RrUUhkQXVpRnZLM2Ywa2lBUjhFeDdXajkxZUU1S3ZSV2tpakQzdklQbnpUK1JhVjJLbE5PZEhNNzFVZEpIZU5QbG9hWW1IUXZmK1BZTHhQQkFKbmdOaFlPcWZjN0hPSmtsOGRkVXdQWkRaUVVnMkhUb0RLb21LaVRuZ1BCdUlMT3dYa24xYVlxVnQxYjBCRTMzQ1R2ZW50L0hjNHVrWTROc3ZuUTNvOHV5Q2diUGRMdko2dlFIVDFPT2lGd3VFbld0WEpyOFpQQXZtZzlsK1RQQjlRR0VHbTJDZ3JjOGpKUFlNZUtuRDRhSFdQamU1UE9PQzFvdGo3eTY1QjRTL0wvUzY2ZFhDVHA1cmx5Y05BVWJnMVk5OVFJNkQrMVRFT2E1VU1KQTNibUJmWXo4dE85eEpFYmxtV3ZsTEY3VkFSREtRV3ROTFQrMHowNktEblpSYzJVMm5iUzdKZ0UyZWVLbWl3L2xTK1U1K3p2VmpYN2kzZ1l0ajVrMHc0S0RZUCt5VWRhYWZxcnVjOUkrNFd1WTh6QnhvZGxCU1JiZEFjNCs2Z1ZVcVo5d25kdjBQb2hsZStTVnBYRzVnS2oyZ1ZZSzUrbXUvM1g3Uk1zQk55ZHRzYUhKUW5kVkpmK0wzd0dRR1JCT3BVekVRcG1HZzF1S2tMYWoxWm16M1JwT2RqT2NjV2daNmxBWnVGKzkzNVQ4WVdnWUcyVUNyck9FQ2dSdDA4U0hCZ0ZYdGlOME5ja0NQSC9GaGNPYmg3QzRqRzhoc1FPTmgxWUdTaTlMb2NzeHNvRXpycUxPUlc4QkM4QjVZSi9JaFdNN0hreThrSkxpSFZ6SE5xL2d5V0tocElOQUhTZTRDcThGK01YRUtXQXVpbUR2SCtBUy90d0lmNEMvakV2RGdmeFpYR0xrSlJQZ1pud2wwNERhMThYOEI2ci9VNE9EanBpVUFBQUFBU1VWT1JLNUNZSUk9Ci8vIEBtYXRjaCAgICAgICAgICAgICAgIGh0dHAqOi8vYmlsaWJpbGkuY29tCi8vIEBtYXRjaCAgICAgICAgICAgICAgIGh0dHAqOi8vYmlsaWJpbGkuY29tLyoKLy8gQG1hdGNoICAgICAgICAgICAgICAgaHR0cCo6Ly93d3cuYmlsaWJpbGkuY29tCi8vIEBtYXRjaCAgICAgICAgICAgICAgIGh0dHAqOi8vd3d3LmJpbGliaWxpLmNvbS8qCi8vIEBsaWNlbnNlICAgICAgICAgICAgIE1vemlsbGEgUHVibGljIExpY2Vuc2UgMi4wOyBNUEwtMi4wCi8vIEBjaGFyc2V0CQkgICAgICAgIFVURi04Ci8vIEBob21lcGFnZVVSTCAgICAgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9TeW5SR0IvQmlsaUJpbGktRWFzeUNvcHkKLy8gQGNvbnRyaWJ1dGlvblVSTCAgICAgaHR0cHM6Ly9naXRodWIuY29tL1N5blJHQi9CaWxpQmlsaS1FYXN5Q29weQovLyBAZG93bmxvYWRVUkwgaHR0cHM6Ly91cGRhdGUuZ3JlYXN5Zm9yay5vcmcvc2NyaXB0cy80NjQxNTUvQmlsaUJpbGktRWFzeUNvcHkudXNlci5qcwovLyBAdXBkYXRlVVJMIGh0dHBzOi8vdXBkYXRlLmdyZWFzeWZvcmsub3JnL3NjcmlwdHMvNDY0MTU1L0JpbGlCaWxpLUVhc3lDb3B5Lm1ldGEuanMKLy8gPT0vVXNlclNjcmlwdD09CgooZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgLy8g5q2k5a6e546w5Y+C6ICD6IeqIElzc3VlICMyIOS4rSBAU2hlbkhvbmdGZWkg55qE5Luj56CBCiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdib2R5JykuYWRkRXZlbnRMaXN0ZW5lcigKICAgICAgICAnY29weScsCiAgICAgICAgZXZlbnQgPT4gewogICAgICAgICAgICBldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTsKICAgICAgICB9LAogICAgICAgIHRydWUKICAgICk7Cn0pKCk7Cgpjb25zb2xlLmxvZygiVXNlcnNjcmlwdCBCaWxpQmlsaS1FYXN5Q29weSAoQmlsaUJpbGkt5Y675paH5pys5aSN5Yi25rC05Y2wKSBsb2FkZWQuIFNlZSBtb3JlIGRldGFpbHMgYXQgaHR0cHM6Ly9naXRodWIuY29tL1N5blJHQi9CaWxpQmlsaS1FYXN5Q29weSIpOwo="},{"name":"CodeMirror Custom CSS","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://tour.go-zh.org/*","https://gopl-zh.github.io/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[],"orig_run_in":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":1728551922681,"run_in":null,"tags":[]},"storage":{"ts":1726968835238,"data":{}},"enabled":true,"position":7,"uuid":"664f84a1-bb68-4611-a41c-9631f3cb9c4d","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBDb2RlTWlycm9yIEN1c3RvbSBDU1MKLy8gQG5hbWVzcGFjZSAgICBodHRwOi8vdGFtcGVybW9ua2V5Lm5ldC8KLy8gQHZlcnNpb24gICAgICAwLjEKLy8gQGRlc2NyaXB0aW9uICBBZGQgY3VzdG9tIENTUyB0byBDb2RlTWlycm9yIGNsYXNzZXMgb24gZ29sYW5nLm9yZwovLyBAYXV0aG9yICAgICAgIFlvdXIgTmFtZQovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vdG91ci5nby16aC5vcmcvKgovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vZ29wbC16aC5naXRodWIuaW8vKgovLyBAZ3JhbnQgICAgICAgIEdNX2FkZFN0eWxlCi8vID09L1VzZXJTY3JpcHQ9PQoKKGZ1bmN0aW9uKCkgewogICAgJ3VzZSBzdHJpY3QnOwoKICAgIC8vIOa3u+WKoOiHquWumuS5iSBDU1MKICAgIEdNX2FkZFN0eWxlKGAKICAgICAgICBbY2xhc3NePSJDb2RlTWlycm9yLSJdIHsKICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdGaXJhIENvZGUnLCBtb25vc3BhY2U7CiAgICAgICAgfQogICAgYCk7CgogICAgR01fYWRkU3R5bGUoYAogICAgICAgIGNvZGUgewogICAgICAgICAgICBmb250LWZhbWlseTogJ0ZpcmEgQ29kZScsIG1vbm9zcGFjZSAhaW1wb3J0YW50OwogICAgICAgIH0KICAgIGApOwoKfSkoKTs="},{"name":"华科验证码好烦好烦好烦！！！","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://pass.hust.edu.cn/cas/login*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[],"orig_run_in":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":null,"run_in":null,"tags":[]},"storage":{"ts":1727843054610,"data":{}},"enabled":true,"position":8,"uuid":"8e667d19-3c8f-426e-9298-6ab0bf7c8a5f","source":""},{"name":"页面小优化(知乎/CSDN/简书)","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://*.zhihu.com/*","https://*.blog.csdn.net/*","https://*.jianshu.com/*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[],"orig_run_in":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":null,"run_in":null,"tags":[]},"storage":{"ts":1731852041459,"data":{}},"enabled":true,"position":9,"file_url":"https://update.greasyfork.org/scripts/424253/%E9%A1%B5%E9%9D%A2%E5%B0%8F%E4%BC%98%E5%8C%96%28%E7%9F%A5%E4%B9%8ECSDN%E7%AE%80%E4%B9%A6%29.user.js","uuid":"2b10f770-3667-4624-85b1-3c8d8b65e58d","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICDpobXpnaLlsI/kvJjljJYo55+l5LmOL0NTRE4v566A5LmmKQovLyBAaWNvbiAgICAgICAgIGh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS80MzQwOTA5Nz92PTQKLy8gQG5hbWVzcGFjZSAgICBodHRwOi8vdGFtcGVybW9ua2V5Lm5ldC8KLy8gQHZlcnNpb24gICAgICAyLjEuMAovLyBAZGVzY3JpcHRpb24gICjnn6XkuY7vvJrnp7vpmaTnmbvlvZXlvLnnqpfjgIHlhY3nmbvlvZXmn6XnnIvlm57nrZTvvJtDU0RO77ya56e76Zmk55m75b2V5by556qX44CB5YWN55m75b2V5aSN5Yi277yb566A5Lmm77ya56e76Zmk55m75b2V5by556qX77ybKQovLyBAYXV0aG9yICAgICAgIGxlZWtiaWxsb3cKLy8gQGhvbWVwYWdlICAgICBodHRwczovL2dpdGh1Yi5jb20vbGVla2JpbGxvdy9jdXN0b21UYW1wZXJtb25rZXkKLy8gQG1hdGNoICAgICAgICBodHRwczovLyouemhpaHUuY29tLyoKLy8gQG1hdGNoICAgICAgICBodHRwczovLyouYmxvZy5jc2RuLm5ldC8qCi8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly8qLmppYW5zaHUuY29tLyoKLy8gQGdyYW50ICAgICAgICBHTV9hZGRTdHlsZQovLyBAZ3JhbnQgICAgICAgIEdNX3NldENsaXBib2FyZAovLyBAZ3JhbnQgICAgICAgIEdNX3htbGh0dHBSZXF1ZXN0Ci8vIEBydW4tYXQgICAgICAgZG9jdW1lbnQtZW5kCi8vIEBkb3dubG9hZFVSTCBodHRwczovL3VwZGF0ZS5ncmVhc3lmb3JrLm9yZy9zY3JpcHRzLzQyNDI1My8lRTklQTElQjUlRTklOUQlQTIlRTUlQjAlOEYlRTQlQkMlOTglRTUlOEMlOTYlMjglRTclOUYlQTUlRTQlQjklOEVDU0ROJUU3JUFFJTgwJUU0JUI5JUE2JTI5LnVzZXIuanMKLy8gQHVwZGF0ZVVSTCBodHRwczovL3VwZGF0ZS5ncmVhc3lmb3JrLm9yZy9zY3JpcHRzLzQyNDI1My8lRTklQTElQjUlRTklOUQlQTIlRTUlQjAlOEYlRTQlQkMlOTglRTUlOEMlOTYlMjglRTclOUYlQTUlRTQlQjklOEVDU0ROJUU3JUFFJTgwJUU0JUI5JUE2JTI5Lm1ldGEuanMKLy8gPT0vVXNlclNjcmlwdD09CgooZnVuY3Rpb24gKCkgewogICJ1c2Ugc3RyaWN0IjsKCiAgc3dpdGNoICh0cnVlKSB7CiAgICBjYXNlIC9cYmJsb2dcLmNzZG5cLm5ldFxiKD8hXC4pLy50ZXN0KGxvY2F0aW9uLmhvc3RuYW1lKTogewogICAgICAvLyBDU0ROCiAgICAgIEdNX2FkZFN0eWxlKGAKICAgICAgICAucGFzc3BvcnQtbG9naW4tY29udGFpbmVyLAogICAgICAgICNwYXNzcG9ydGJveAogICAgICAgIHsKICAgICAgICAgICAgZGlzcGxheTpub25lIWltcG9ydGFudAogICAgICAgIH0KICAgICAgICBjb2RlCiAgICAgICAgewogICAgICAgICAgdXNlci1zZWxlY3Q6dGV4dCFpbXBvcnRhbnQ7CiAgICAgICAgfQogICAgICAgIC5obGpzLWJ1dHRvbgogICAgICAgIHsKICAgICAgICAgIGRpc3BsYXk6bm9uZSFpbXBvcnRhbnQ7CiAgICAgICAgfQogICAgICBgKTsKICAgICAgZG9jdW1lbnQuYm9keS5xdWVyeVNlbGVjdG9yKCIjY29udGVudF92aWV3cyIpLm9uY29weSA9IGZ1bmN0aW9uICgpIHsKICAgICAgICBHTV9zZXRDbGlwYm9hcmQoZ2V0U2VsZWN0aW9uKCkudG9TdHJpbmcoKSk7CiAgICAgIH07CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSAvXGJ6aGlodVwuY29tXGIoPyFcLikvLnRlc3QobG9jYXRpb24uaG9zdG5hbWUpOiB7CiAgICAgIC8vIOefpeS5jgogICAgICAvLyDkuI3np7vpmaTmkJzntKLnu5PmnpwKICAgICAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lID09PSAiL3NlYXJjaCIpIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIi5MaXN0IikucmVtb3ZlQ2hpbGQgPSAoKSA9PiBudWxsOwogICAgICAvL+a3u+WKoOmZkOWItuagt+W8jwogICAgICBsZXQgYmh1U3R5bGUgPSBHTV9hZGRTdHlsZShgCiAgICAgICAgLk1vZGFsLXdyYXBwZXIsCiAgICAgICAgLk1vZGFsLWJhY2tkcm9wLAogICAgICAgIC5zaWduRmxvd01vZGFsCiAgICAgICAgewogICAgICAgICAgICBkaXNwbGF5Om5vbmUhaW1wb3J0YW50OwogICAgICAgIH0KICAgICAgYCk7CiAgICAgIC8vIOW8ueeql+aVsOmHj++8jOS4k+agj+S4ujIKICAgICAgbGV0IHJ1YmJpc2hEaWFsb2dRdWFudGl0eSA9IDEgKyAvXGJ6aHVhbmxhblwuemhpaHVcLmNvbVxiKD8hXC4pLy50ZXN0KGxvY2F0aW9uLmhvc3RuYW1lKSwKICAgICAgICBjbGlja2VkID0gW107CiAgICAgIC8vIOWPlua2iOmmluasoeiHquWKqOW8ueWHuueZu+W9leahhizop6PpmaTnm5HlkKwKICAgICAgbGV0IHJlbW92ZVN0eWxlID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgYmh1U3R5bGUucmVtb3ZlKCk7CiAgICAgICAgfSwKICAgICAgICB0YXJnZXROb2RlID0gZG9jdW1lbnQuYm9keSwKICAgICAgICBvYnNlcnZlck9wdGlvbnMgPSB7CiAgICAgICAgICBjaGlsZExpc3Q6IHRydWUsCiAgICAgICAgICBzdWJ0cmVlOiB0cnVlLAogICAgICAgIH0sCiAgICAgICAgb2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcihmdW5jdGlvbiAobXV0YXRpb25MaXN0LCBvYnNlcnZlcikgewogICAgICAgICAgbGV0IHJ1YmJpc2hEaWFsb2dDbG9zZUJ1dHRvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCIuTW9kYWwtY2xvc2VCdXR0b24iKTsKICAgICAgICAgIGlmIChydWJiaXNoRGlhbG9nQ2xvc2VCdXR0b25zLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgLy8g5YWz6Zet5by556qXCiAgICAgICAgICAgIHJ1YmJpc2hEaWFsb2dDbG9zZUJ1dHRvbnMuZm9yRWFjaCgoRSkgPT4gewogICAgICAgICAgICAgIGlmIChjbGlja2VkLmluY2x1ZGVzKEUpKSByZXR1cm47CiAgICAgICAgICAgICAgRS5jbGljaygpOwogICAgICAgICAgICAgIGNsaWNrZWQucHVzaChFKTsKICAgICAgICAgICAgICBpZiAoLS1ydWJiaXNoRGlhbG9nUXVhbnRpdHkgPCAxKSB7CiAgICAgICAgICAgICAgICBvYnNlcnZlci5kaXNjb25uZWN0KCk7CiAgICAgICAgICAgICAgICBsZXQgbG9naW5CdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIuQXBwSGVhZGVyLWxvZ2luIik7CiAgICAgICAgICAgICAgICBsb2dpbkJ1dHRvbiAmJiAobG9naW5CdXR0b24ub25jbGljayA9ICgpID0+IHJlbW92ZVN0eWxlKCkpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIC8vIOa3u+WKoOafpeeci+WbnuetlOaMiemSrgogICAgICAgICAgICBjb25zdCBleHRlbmR4QnV0dG9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIi5CdXR0b24uQ29udGVudEl0ZW0tcmlnaHRCdXR0b24uQ29udGVudEl0ZW0tZXhwYW5kQnV0dG9uIik7CiAgICAgICAgICAgIGV4dGVuZHhCdXR0b25zLmZvckVhY2goKEUpID0+IHsKICAgICAgICAgICAgICBjb25zdCB1cmwgPSBFLnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuQ29udGVudEl0ZW0uQW5zd2VySXRlbT5baXRlbXByb3A9InVybCJdJykuZ2V0QXR0cmlidXRlKCJjb250ZW50IiksCiAgICAgICAgICAgICAgICBhbnN3ZXJJZCA9IHVybC5zcGxpdCgiLyIpLnBvcCgpLAogICAgICAgICAgICAgICAgZGlyZWN0Vmlld0J1dHRvbiA9IEUuY2xvbmVOb2RlKCk7CiAgICAgICAgICAgICAgZGlyZWN0Vmlld0J1dHRvbi5pbm5lckhUTUwgPSAi5oiR4oSi6KaB55yL5Zue562UIjsKICAgICAgICAgICAgICBkaXJlY3RWaWV3QnV0dG9uLnNldEF0dHJpYnV0ZSgic3R5bGUiLCAiYm90dG9tOiAzNXB4Iik7CiAgICAgICAgICAgICAgZGlyZWN0Vmlld0J1dHRvbi5vbmNsaWNrID0gYXN5bmMgKCkgPT4gewogICAgICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgICAgY29uc3QgeyByZXNwb25zZVRleHQgfSA9IGF3YWl0IEdNLnhtbEh0dHBSZXF1ZXN0KHsKICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZDogImdldCIsCiAgICAgICAgICAgICAgICAgICAgICB1cmw6IGBodHRwczovL3d3dy56aGlodS5jb20vYXBwdmlldy92Mi9hbnN3ZXIvJHthbnN3ZXJJZH0/bmF0aXZlPTAmb21uaT0xJnNkcz0yJlgtQUQ9Y2FudmFzX3ZlcnNpb24lM0F2JTNENS4xJTNCc2V0dGluZyUzQWNhZCUzRDAmc2VnX2xpa2Vfb3Blbj0wYCwKICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICBuZXdXaW5kb3cgPSB3aW5kb3cub3BlbigiIiwgYW5zd2VySWQsICJwb3B1cCx3aWR0aD04NTAsaGVpZ2h0PTEwMDAsbGVmdD0yMDAsdG9wPTIwMCIpLAogICAgICAgICAgICAgICAgICAgIGNvbnRlbnQgPSByZXNwb25zZVRleHQsCiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQgPSBuZXdXaW5kb3cuZG9jdW1lbnQ7CiAgICAgICAgICAgICAgICAgIG5ld1dpbmRvdy5zYW5kYm94ID0gImFsbG93LXNhbWUtb3JpZ2luIjsKICAgICAgICAgICAgICAgICAgZG9jdW1lbnQub3BlbigpOwogICAgICAgICAgICAgICAgICBkb2N1bWVudC53cml0ZShjb250ZW50KTsKICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuY2xvc2UoKTsKICAgICAgICAgICAgICAgICAgbmV3V2luZG93Lm9ubG9hZCA9ICgpID0+IHsKICAgICAgICAgICAgICAgICAgICBjb25zdCBpbWdzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgiW2RhdGEtYWN0dWFsc3JjXSIpLAogICAgICAgICAgICAgICAgICAgICAgc2NyaXB0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoInNjcmlwdCIpLAogICAgICAgICAgICAgICAgICAgICAgbm9yZXF1aXJlZFNlbGVjdG9yID0gWyIuY3NzLTE5OWtlZnciLCAiLmNzcy1pOHBzNDMiLCAiLmNzcy0xZ2N3cXdzIiwgIi5jc3MtMXl1YzlzNCIsICIuQW5zd2VyVG9vbGJhci13cmFwcGVyIl07CiAgICAgICAgICAgICAgICAgICAgaW1ncy5mb3JFYWNoKChpbWcpID0+IHsKICAgICAgICAgICAgICAgICAgICAgIGltZy5zZXRBdHRyaWJ1dGUoInNyYyIsIGltZy5nZXRBdHRyaWJ1dGUoImRhdGEtYWN0dWFsc3JjIikpOwogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIHNjcmlwdHMuZm9yRWFjaCgoc2NyaXB0KSA9PiBzY3JpcHQucmVtb3ZlKCkpOwogICAgICAgICAgICAgICAgICAgIG5vcmVxdWlyZWRTZWxlY3Rvci5mb3JFYWNoKChzZWxlY3RvcikgPT4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik/LnJlbW92ZSgpKTsKICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIuQW5zd2VyUGFnZS1jb250ZW50Iikuc3R5bGUgPSAidXNlci1zZWxlY3Q6dGV4dCI7CiAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgIEUuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KCJhZnRlcmVuZCIsIGRpcmVjdFZpZXdCdXR0b24pOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSByZXR1cm47CiAgICAgICAgfSk7CiAgICAgIG9ic2VydmVyLm9ic2VydmUodGFyZ2V0Tm9kZSwgb2JzZXJ2ZXJPcHRpb25zKTsKICAgICAgLy8z56eS5ZCO56e76Zmk55uR5ZCsCiAgICAgIHNldFRpbWVvdXQoKCkgPT4gKG9ic2VydmVyLmRpc2Nvbm5lY3QoKSwgcmVtb3ZlU3R5bGUoKSksIDMwMDApOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgL1xiamlhbnNodVwuY29tXGIoPyFcLikvLnRlc3QobG9jYXRpb24uaG9zdG5hbWUpOiB7CiAgICAgIC8vIOeugOS5pgogICAgICBHTV9hZGRTdHlsZShgCiAgICAgICAgYm9keT5kaXY6bGFzdC1jaGlsZAogICAgICAgIHsKICAgICAgICAgIGRpc3BsYXk6bm9uZSFpbXBvcnRhbnQKICAgICAgICB9CiAgICAgICAgYm9keQogICAgICAgIHsKICAgICAgICAgICAgb3ZlcmZsb3c6YXV0byFpbXBvcnRhbnQKICAgICAgICB9CiAgICAgIGApOwogICAgICBicmVhazsKICAgIH0KICAgIGRlZmF1bHQ6CiAgICAgIGJyZWFrOwogIH0KfSkoKTsK"},{"name":"WeiyunHelper - 微云 Aria2 下载辅助脚本","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://*.weiyun.com/*"],"orig_noframes":null,"orig_run_at":"document-end","orig_run_in":[],"orig_tags":[],"use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"run_in":null,"sandbox":null,"tags":[],"unwrap":null,"user_modified":null},"storage":{"ts":1736136637090,"data":{}},"enabled":true,"position":10,"file_url":"https://update.greasyfork.org/scripts/402669/WeiyunHelper%20-%20%E5%BE%AE%E4%BA%91%20Aria2%20%E4%B8%8B%E8%BD%BD%E8%BE%85%E5%8A%A9%E8%84%9A%E6%9C%AC.user.js","uuid":"37dbe549-f725-40aa-be63-0f1103d6f806","source":""}]}